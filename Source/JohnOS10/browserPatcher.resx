<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhgACAAPcAAAAAAIAAAACAAICAAAAAgIAAgACAgMDAwMDcwKbK8P8A/8SdnrSNjp58ffbAwu+6
        vIJmZ+azteKwst6tr9mrrdeoqtOlp8+ipMueoMGXmbuSlKuFh2BOTlJAQeq3utPGx7OoqWxWWZyVlkxI
        SZCOj4iHiNzc38TEyry8vaqqq6Wlpm9weEZVnZKTmAwMJQwWRoGHnjpDXyAjMRYlWUFGVTM3RhkvbxYq
        YRkvayNBmhkxchkvbhkvaxYsaBYqZBEjUyVFniA8ih01exkzdRkvbRYsZxYqYhYoXBEgSSVGoR06hx05
        hB05gx05gh03fh01ehkzdBkvbBYsZhYqYhYqYCNFnSBAkB06hh03fRkzcxYsZRYqXxYoXCBAkyA+jh03
        fBkxcRkvaSNBlyA8iBkxcBElVxEjTyBBlCA+jBk1eRk1eBkxbwwZPB05gBk1dxk1dhElVautsltcYhEl
        WQwWNTNIeRYqWhYqT0tXbyBAdh08Ynd5ei8xMWJiYVJLHUVBKKOccJeJN+vVVdrGUMa0S6qaPL6sRbOi
        QY2EUIl8M25lM6aZUKGROmtlS4WEgG9rXn9yVVdJPIh0bezs7Ojj49jY2NHR0cnJycLCwri3t7Ozs5+f
        n4R6em1sbFdWVlJSUi9zbUmVgTqPdzODbEV7aDqUZFKqek5kVTWSTy9vQDlFOlm7bVWqZZO4mkWWVUCs
        UlqWZFXla0DdUnvWhZPmnIW5hmJ1Ymtra1lcWb3rvLHlrqbDpG2XabfStJDZh7PGr3y6aIqcgl5rVYCX
        bGRpT3F0UnBwbGdSQY5VPGJiYlxcXFBQUEhISDk3NygoKCxINVDhaVnxc3awcp+agwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/78KCgpICAgP8AAAD/AP//AAAA//8A/wD/////
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD9ACwAAAAAgACAAAAI/wD7CRxIsKDBgwgTKlzIsKHDhxAj
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAEABADwAgAAJgAAABAQEAABAAQAMAEAABYDAAAoAAAAIAAAAEAAAAABAAQAAAAAAAAC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAAh3d3gAAAAAh3ePeIAAAAAI///4gA
        AAAAh3eId4AAAACP//+HgAAAAAj7+/v7AAAAj///h3gAAAAAiIiIiIAAAI///4d3gAAAAAAAAAAAAACP
        //+Hd4AAAAAAAAAAAAAAj///h3eAAAAAAAAAAAAAAEzMzEd3gIC/v7+4iIgAAABMzMxEd4CICIiIgIiI
        gAAATMzMREeAiHCH94gIeIgAAEzMzEREgIgAAAAAAHiIgABMzMwERECId3d3d3d4iIAAj///AERAd///
        ////+IiACI///wcEQIiIiIiIiIeIgIh4iIh38EAAAAAAAACIeICHh3eIf/8AiHd3d3d4CIeAj3h3cIiI
        gHf/////eICIgAj3hwj//3AIiIiIj3iAAAAAj3AI//9wTMzMzI94gAAAAAjwAIiIjMzMzMyPeIAAAAAA
        gACPgMzMzMzMj3iAAAAAAAAAj4DMzMzMzI94gAAAAAAAAI+AzszMzMyPeIAAAAAAAACPgM7MzMzMj3iA
        AAAAAAAAj4DMzMzMzI94gAAAAAAAAI+AAAAAAACPeIAAAAAAAACPiIiIiIiIj3iAAAAAAAAAj3d3d3d3
        d3d4gAAAAAAAAAj/////////+IAAAAAAAAAAh3d3d3d3d3+AAAAAAAAAAAiIiIiIiIiIgAAAwH8AP8A/
        gB/AH8APwA/gB8AH8APAA///wAP//8AAAA/AAAAHwAAAA8AAAAHAAAAAwAAAAMAAAACAAAAAAAAAAAAA
        AAAAAAABgAAAD8IAAA/jAAAP8wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//gAAP/8AAD//g
        AB8AAAAAAAAAACgAAAAQAAAAIAAAAAEABAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACA
        AAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAA
        AAAI/4AAi4AAAAj/hwAAAAAACP+HCIiHeAAEzEcICwB4gATMBA////iACP8ECIiIh4CIiHAAAAAIgI+H
        iAd3d4CAj/j/jMzHiAAIgIhMzMeIAAAAj07Mx4gAAACPRERHiAAAAI////eIAAAACHd3d3gAAAAAiIiI
        iACGH/3/gw8A1IADd3iAAf/9gAB3jYAA3deAAP/9AAB4dwABiH0AAQCgkAEHAPAByHfwAQAA8AFwd/gB
        yHf8AwAAAAAAAAAAAAA=
</value>
  </data>
</root>